<!DOCTYPE html>
<html lang="en">
<head>
    <title>Cluebot Senpai</title>
    <style>
        body, html {
            font-family: monospace, sans-serif;
            margin: 0;
            padding: 0;
            width: 100%;
            height: 100%;
            background: #080808;
            color: white;
        }
        h1, p {
            margin: 0;
        }
        #root {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            margin: 0 auto;
            # width: 1000px;
            # height: 100%;
        }
        header div {
            # margin-bottom: 5em;
            padding-top: 2em;
            text-align: center;
        }
        h1 {
            font-size: 3em;
            text-align: center;
            margin-bottom: 1em;
        }
        #subtitle {
            font-size: 1.5em;
            padding-bottom: 0.5em;
        }
        #subtitle:nth-of-type(2) {
            font-size: 0.7em;
        }
        #question {
            margin-bottom: 1.5em;
            font-size: 2em;
        }

        #form {
            width: 500px;
            display: flex;
            flex-direction: column;
            align-items: center;
        }
        .input_ctn {
            margin: 1em 0;
            display: flex;
            flex-direction: column;
            justify-content: space-around;
        }
        .input_ctn label {
            margin-bottom: 1em;
        }
        .input_ctn input, .input_ctn textarea {
            width: 450px;
            font-size: 1.2em;
            font-family: inherit;
        }
        .input_ctn input {
            height: 2em;
        }
        .input_ctn textarea {
            height: 10em;
        }
        #form-msg {
            padding-bottom: 1em;
            height: 1em;
        }
        #submit {
            font-family: inherit;
            font-size: 1.5em;
            background: none;
            border: 2px solid white;
            padding: 10px;
            color: white;
            cursor: pointer;
        }
        #submit:hover {
            background: white;
            color: black;
        }

        img {
            -webkit-animation: mover 2s infinite  alternate;
            animation: mover 2s infinite  alternate;
        }
        @-webkit-keyframes mover {
            0% { transform: translateY(0); }
            100% { transform: translateY(-20px); }
        }
        @keyframes mover {
            0% { transform: translateY(0); }
            100% { transform: translateY(-20px); }
        }
        .senpai{
            display: flex;
            flex-direction: row;
            margin: auto;
            width: 50%;
            padding: 10px;
            justify-content: center;s
        }
        /*Animated text*/
        


.bouncing-text {
  position: relative;
  display: flex;
}

.b, .o, .u, .n, .c, .e {
  position: relative;
  color: #4cc9f0;
  text-shadow: 0 3px #4361ee, 0 5px #4361ee, 0 7px #4361ee;
}

.b {
  animation: bounce 1s ease infinite;
  -webkit-animation: bounce 1s ease infinite;
}

.o {
  animation: bounce 1s ease infinite .1s;
  -webkit-animation: bounce 1s ease infinite .1s;
}

.u {
  animation: bounce 1s ease infinite .2s;
  -webkit-animation: bounce 1s ease infinite .2s;
}

.n {
  animation: bounce 1s ease infinite .3s;
  -webkit-animation: bounce 1s ease infinite .3s;
}

.c {
  animation: bounce 1s ease infinite .4s;
  -webkit-animation: bounce 1s ease infinite .4s;
}

.e {
  animation: bounce 1s ease infinite .5s;
 -webkit-animation: bounce 1s ease infinite .5s;
}

 @keyframes bounce {
        0%   { transform: scale(1,1) translateY(0); }
        10%  { transform: scale(1.1,.9) translateY(0); }
        30%  { transform: scale(.9,1.1)   translateY(-55px);}
        50%  { transform: scale(1.05,.95) translateY(0); }
        58%  { transform: scale(1,1) translateY(-7px); }
        65%  { transform: scale(1,1) translateY(0);}
        100% { transform: scale(1,1) translateY(0);}
    }

@-webkit-keyframes bounce {
       0%   { transform: scale(1,1) translateY(0); }
        10%  { transform: scale(1.1,.9) translateY(0); }
        30%  { transform: scale(.9,1.1)   translateY(-55px);}
        50%  { transform: scale(1.05,.95) translateY(0); }
        58%  { transform: scale(1,1) translateY(-7px);}
        65%  { transform: scale(1,1) translateY(0);}
        100% { transform: scale(1,1) translateY(0);} 
}


.bouncing-text:before, .bouncing-text:after {
  content:"";
  position: absolute;
  background-color: rgba(0,0,0,0.4);
  width: 50px;
  height:5px;
  border-radius:50%;
  top:82px;
  z-index:-1;
}



.bouncing-text:before {
  left:0;
  animation: scale 1s linear infinite;
  -webkit-animation: scale 1s linear infinite;
}

@keyframes scale {
  0% {transform: scaleX(1);}
  25% {transform: scaleX(0.4);}
  50% {transform: scaleX(1);}
  75% {transform: scaleX(0.9);}
  100% {transform: scaleX(1);}
}

@-webkit-keyframes scale {
   0% {transform: scaleX(1);}
  25% {transform: scaleX(0.4);}
  50% {transform: scaleX(1);}
  75% {transform: scaleX(0.9);}
  100% {transform: scaleX(1);}
}

.bouncing-text:after {
  left: 57px;
  animation: scale 1s linear infinite .1s;
  -webkit-animation: scale 1s linear infinite .1s;
}





    </style>
</head>

<body>
    <div id="root">
        <header>
            <div>
                <h1>{{ question }}</h1>
               
                <p id="subtitle">Enter your answer below...</p>
                <div class="senpai">
                    <img src="/static/owo_whats_this_smol.png" height=80 width=80></img>
                    <div class="bouncing-text">
                    <p id="subtitle">Maybe senpai will notice you.</p>

                    </div>
                    <img src="/static/owo_whats_this_smol.png" height=80 width=80></img>
                </div>
                <div class="bouncing-text">
  <div class="b">B</div>
  <div class="o">O</div>
  <div class="u">U</div>
  <div class="n">N</div>
  <div class="c">C</div>
  <div class="e">E</div>
  <div class="shadow"></div>
  <div class="shadow-two"></div>
</div>
            </div>
        </header>

        <div id="form">
            <div class="input_ctn">
                <label for="handle">Enter your Flowdock handle:</label>
                <input type="text" name="handle" id="handle" spellcheck="false" autocomplete="false" />
            </div>

            <div class="input_ctn">
                <label for="answer">What's your answer?</label>
                <textarea name="answer" id="answer" spellcheck="false"></textarea>
            </div>
         

            <!-- This is for displaying possible error messages, see inline script below. -->
            <p id="form-msg"></p>

            <input type="button" id="submit" value="Go!" />
            <div>{{ error_message }}</div>
        </div>
    </div>
</body>

<script>
    window.onload = function() {
        const handle = document.getElementById('handle');
        const answer = document.getElementById('answer');
        const message = document.getElementById('form-msg');
        const submit = document.getElementById('submit');

        const baseFontPx = 14;
        let wrongCounter = baseFontPx;

        submit.onclick = async function() {
            if (!handle.value || !answer.value) {
                message.innerText = 'Did you forget something? ðŸ‘€';
                message.style.color = 'red';
                message.style.fontSize = `${wrongCounter}px`;
                wrongCounter += 1;
            } else {
    
                await fetch('/api/answer', { 
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ 
                        handle: handle.value, 
                        answer: answer.value 
                    })
                })
                    .then((resp) => resp.json())
                    .then((resp) => {
                        if (resp.error) {
                            throw resp;
                        }
                        message.innerText = 'Thanks bae, come back later ðŸ˜˜';
                        message.style.color = 'white';
                        message.style.fontSize = `${baseFontPx}px`;
                        wrongCounter = baseFontPx;
                    })
                    .catch(({ error }) => {
                        console.error(error);
                        message.innerText = 'Cluebot might be sick with a case of internal server error ðŸ™ˆ, oooorrrr maybe you haven't joined the teamgame flow on Flowdock. Make sure you've joined before you answer!';
                        message.style.color = 'red';
                    });
            }
        }
    }
</script>
</html>